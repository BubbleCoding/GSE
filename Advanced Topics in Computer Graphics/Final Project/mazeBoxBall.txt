var createScene = function () {
    // Create basic scene
    var scene = new BABYLON.Scene(engine);
    var camera = new BABYLON.FreeCamera("camera1", new BABYLON.Vector3(0, 10, -15), scene);
    camera.setTarget(BABYLON.Vector3.Zero());
    camera.attachControl(canvas, true);
    var light = new BABYLON.HemisphericLight("light1", new BABYLON.Vector3(0, 1, 0), scene);
    light.intensity = 0.7;

    var box1 = BABYLON.MeshBuilder.CreateBox("box1", {width:10, height: 0.1, depth: 10}, scene);
    //box1.rotation.z = Math.PI/2
    box1.position.y = 0;
    var box2 = BABYLON.MeshBuilder.CreateBox("box1", {width:0.1, height: 1, depth: 10}, scene);
    box2.position.x = 5;
    box2.position.y = 0.5;
    var box3 = BABYLON.MeshBuilder.CreateBox("box1", {width:0.1, height: 1, depth: 10}, scene);
    box3.position.x = -5;
    box3.position.y = 0.5;
    var box4 = BABYLON.MeshBuilder.CreateBox("box1", {width:10, height: 1, depth: .1}, scene);
    box4.position.z = -5;
    box4.position.y = 0.5;
    var box5 = BABYLON.MeshBuilder.CreateBox("box1", {width:10, height: 1, depth: .1}, scene);
    box5.position.z = 5;
    box5.position.y = 0.5;
    const plane = BABYLON.MeshBuilder.CreatePlane("plane", {size:10}, scene);
    plane.rotation.x = -Math.PI/2;
    plane.position.y = 1;
    var box = BABYLON.Mesh.MergeMeshes([box1,box2,box3,box4,box5,plane]);
    //var ground = BABYLON.Mesh.CreateGround("ground1", 6, 6, 2, scene);
    const sphere = BABYLON.MeshBuilder.CreateSphere("sphere", {diameter: 0.5});
    sphere.position.y = 0.5;
    var gizmoManager = new BABYLON.GizmoManager(scene);
    gizmoManager.rotationGizmoEnabled = true;
    gizmoManager.attachToMesh(box);

    gizmoManager.gizmos.rotationGizmo.xGizmo.isEnabled = true;
    gizmoManager.gizmos.rotationGizmo.yGizmo.isEnabled = true;
    gizmoManager.gizmos.rotationGizmo.zGizmo.isEnabled = true;
    gizmoManager.gizmos.rotationGizmo.xGizmo.scaleRatio = 8;
    gizmoManager.gizmos.rotationGizmo.xGizmo.updateScale = false;

    scene.enablePhysics();
    //plane.physicsImpostor = new BABYLON.PhysicsImpostor(plane, BABYLON.PhysicsImpostor.PlaneImpostor, { mass: 0, restitution: 0 }, scene);
    box.physicsImpostor = new BABYLON.PhysicsImpostor(box, BABYLON.PhysicsImpostor.MeshImpostor, { mass: 0, restitution: 0 }, scene);
    sphere.physicsImpostor = new BABYLON.PhysicsImpostor(sphere, BABYLON.PhysicsImpostor.SphereImpostor, { mass: 1, restitution: 0 }, scene);
    return scene;

};